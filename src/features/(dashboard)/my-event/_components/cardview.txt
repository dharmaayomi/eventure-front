"use client";
import { Button } from "@/components/ui/button";
import { cn } from "@/lib/utils";
import { format } from "date-fns";
import { Edit, Eye, Trash, User } from "lucide-react";
import { getStatusColor } from "./getStatusColor";

interface CardViewProps {
  events: Event[];
  onDelete: (id: number) => void;
}

interface Event {
  id: number;
  name: string;
  startDate: Date;
  endDate: Date;
  status: string;
  attendees: number;
  image: string;
}

interface CardViewProps {
  event: Event;
}

export const CardView = ({ events, onDelete }: CardViewProps) => (
  <div className="grid grid-cols-1 gap-6 md:grid-cols-2 xl:grid-cols-3">
    {events.map((event) => (
      <div
        key={event.id}
        className="overflow-hidden rounded-2xl border bg-white shadow-sm transition-shadow hover:shadow-md"
      >
        <div className="relative h-48">
          <img
            src={event.image}
            alt={event.name}
            className="h-full w-full object-cover"
            onError={(e) => {
              (e.target as HTMLImageElement).src =
                "https://images.unsplash.com/photo-1533174072545-7a4b6ad7a6c3?ixlib=rb-4.0.3";
            }}
          />
        </div>

        <div className="space-y-2 p-4">
          <h3 className="truncate text-lg font-semibold">{event.name}</h3>

          <p className="text-sm text-gray-500">
            {format(event.startDate, "MMM dd, yyyy")} â€“{" "}
            {format(event.endDate, "MMM dd, yyyy")}
          </p>

          <span
            className={cn(
              "inline-block rounded-full bg-gray-100 px-3 py-1 text-xs font-medium text-gray-800",
              getStatusColor(event.status),
            )}
          >
            {event.status.charAt(0).toUpperCase() + event.status.slice(1)}
          </span>

          <div className="flex items-center justify-between pt-3">
            <div className="flex items-center gap-2 text-sm text-gray-600">
              <User className="h-4 w-4" />
              {event.attendees}
            </div>

            <div className="flex gap-2">
              <Button
                variant="ghost"
                size="icon"
                className="cursor-pointer transition hover:bg-gray-100"
              >
                <Edit className="h-4 w-4 text-blue-600" />
              </Button>
              <Button
                variant="ghost"
                size="icon"
                className="cursor-pointer transition hover:bg-gray-100"
              >
                <Eye className="h-4 w-4 text-orange-500" />
              </Button>
              <Button
                variant="ghost"
                size="icon"
                onClick={() => onDelete(event.id)}
                className="cursor-pointer transition hover:bg-gray-100"
              >
                <Trash className="h-4 w-4 text-red-600" />
              </Button>
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>
);
